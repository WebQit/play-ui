{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/dfn.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","icon","window","HTMLElement","super","this","params","sizes","xs","sm","md","lg","xl","xxl","oldValue","newValue","firstRendering","_render","iconPathEl","closest","iconPath","getAttribute","iconTypeEl","iconType","_size","size","_url","innerHTML","dfn","customElements","define"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uCCzEtC,YAEd,MAAM,KAAEC,GCAM,YAgFX,MAAO,CACHA,KA5ES,cAAcC,EAAOC,YAO9B,cACIC,QACAC,KAAKC,OAAS,GACdD,KAAKE,MAAQ,CAACC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAQzE,gCACI,MAAO,CAAC,OAAQ,QAYpB,yBAAyBrC,EAAMsC,EAAUC,GACrCV,KAAKC,OAAO9B,GAAQuC,EAChBV,KAAKW,gBACLX,KAAKY,UASb,oBACI,IAAIC,EAAab,KAAKc,QAAQ,oBAE1Bd,KAAKe,SADLF,EACgBA,EAAWG,aAAa,kBAExB,GAEpB,IAAIC,EAAajB,KAAKc,QAAQ,oBAE1Bd,KAAKkB,SADLD,EACgBA,EAAWD,aAAa,kBAExB,GAEpBhB,KAAKY,UACLZ,KAAKW,gBAAiB,EAQ1B,UACI,IAAIQ,EAAQnB,KAAKE,MAAMF,KAAKC,OAAOmB,OAAS,KACxCC,EAAOrB,KAAKe,SAAW,KAAOf,KAAKkB,SAAWlB,KAAKkB,SAAW,IAAM,IAAM,YAC9ElB,KAAKsB,UAAY,0BAA0BH,cAAkBA,6DACtCE,KAAQrB,KAAKC,OAAO9B,iCD1ErCoD,CAAI1B,GAKrBA,EAAO2B,eAAeC,OAAO,YAAa7B,GEP3C,CAAKC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * @imports\r\n */\r\nimport dfn from './dfn.js';\r\n\r\n/**\r\n * @definitions\r\n */\r\nexport default function(window) {\r\n\r\n\tconst { icon } = dfn(window);\r\n\t\r\n\t/**\r\n\t * The [ul] elements\r\n\t */\r\n\twindow.customElements.define('play-icon', icon);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\n\r\n\r\n/**\r\n * ---------------------------\r\n * Class definitions\r\n * ---------------------------\r\n */\r\nexport default function(window) {\r\n\r\n    /**\r\n     * @list\r\n    */\r\n    const icon = class extends window.HTMLElement {\r\n        \r\n        /**\r\n         * Establish a common Timeline.\r\n         *\r\n         * @return void\r\n         */\r\n        constructor() {\r\n            super();\r\n            this.params = {};\r\n            this.sizes = {xs: '16', sm: '24', md: '32', lg: '48', xl: '56', xxl: '64'};\r\n        }\r\n\r\n        /**\r\n         * The attributes we want to observe.\r\n         *\r\n         * @return array\r\n         */\r\n        static get observedAttributes() {\r\n            return ['name', 'size'];\r\n        }\r\n                \r\n        /**\r\n         * Handle attribute-change.\r\n         *\r\n         * @param String name\r\n         * @param String oldValue\r\n         * @param String newValue\r\n         *\r\n         * @return void\r\n         */\r\n        attributeChangedCallback(name, oldValue, newValue) {\r\n            this.params[name] = newValue;\r\n            if (this.firstRendering) {\r\n                this._render();\r\n            }\r\n        }\r\n                \r\n        /**\r\n         * Handle connected-state.\r\n         *\r\n         * @return void\r\n         */\r\n        connectedCallback() {\r\n            var iconPathEl = this.closest('[play-icon-path]');\r\n            if (iconPathEl) {\r\n                this.iconPath = iconPathEl.getAttribute('play-icon-path');\r\n            } else {\r\n                this.iconPath = '';\r\n            }\r\n            var iconTypeEl = this.closest('[play-icon-type]');\r\n            if (iconTypeEl) {\r\n                this.iconType = iconTypeEl.getAttribute('play-icon-type');\r\n            } else {\r\n                this.iconType = '';\r\n            }\r\n            this._render();\r\n            this.firstRendering = true;\r\n        }\r\n                \r\n        /**\r\n         * Render icon.\r\n         *\r\n         * @return void\r\n         */\r\n        _render() {\r\n            var _size = this.sizes[this.params.size] || '32';\r\n            var _url = this.iconPath + '/' + (this.iconType ? this.iconType + '-' : '') + 'icons.svg';\r\n            this.innerHTML = `<svg class=\"bi\" width=\"${_size}\" height=\"${_size}\" fill=\"currentColor\">\r\n                <use xlink:href=\"${_url}#${this.params.name}\"/>\r\n            </svg>`;\r\n        }\r\n\r\n    };\r\n    \r\n    return {\r\n        icon,\r\n    }\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport init from './index.js';\r\n\r\n/**\r\n * @init\r\n */\r\ninit(window);"],"sourceRoot":""}